///
/// Get random color
///
/// @param {Null|Map|List} $colors [null] - color name
/// @param {Null|Map|List} $tones [null] - color tone
/// @param {Map} $global-palette [$global-palette] - color palette
///
/// @return {color}
///
/// @example
///   sp-random-color() // #ffcc80
///   sp-random-color() // #283593
///
/// @todo create separate `exceptions` function
///
/// @todo add `$colors`/`$tones` options for `exceptions` function
///

@function sp-random-color($colors: 'all', $tones: 'all', $global-palette: $palette) {
	@if type-of($global-palette) == 'map' {
		@if $colors == 'all' and
		$tones == 'all' {
			$color-name: sp-random-of(map-keys($global-palette));
			$tones: map-keys(map-get($global-palette, $color-name));
			$tone: sp-random-of($tones);

			@return sp-color($color-name, $tone);
		}
		@if $colors == 'all' {
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
			// @if type-of($tones) == 'string'
		}
		@if type-of($colors) == 'string' {
			// @if $tones == 'all'
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
		}
		@if type-of($colors) == 'list' {
			$color-name: sp-random-of($colors);
			@return $color-name;
			// @if $tones == 'all'
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
			// @if type-of($tones) == 'string'
		}
		@if type-of($colors) == 'map' and
		map-get($colors, 'exceptions') {
			$exceptions: map-get($colors, 'exceptions');
			$color-name: sp-random-of(map-keys($palette));
			@each $exception in $exceptions {
				@if $color-name == $exception {
					$color-name: sp-random-color($colors, $tones, $global-palette);
				}
			}
			// @if $tones == 'all'
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
			// @if type-of($tones) == 'string'
			@return $color-name;
		}
	} @else {
		@return null;
	}
}
