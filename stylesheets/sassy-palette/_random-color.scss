///
/// Get random color
///
/// @access public
///
/// @param {Map|List|String} $colors ['all'] - color name
/// @param {Map|List|String} $tones ['all'] - color tone
/// @param {Map} $global-palette [$palette] - color palette
///
/// @return {Color}
///
/// @example
///   sp-random-color() // #ffcc80
///   sp-random-color('all', ('exceptions': ('300', '200', '100'))) // #283593
///

@function sp-random-color($colors: 'all', $tones: 'all', $global-palette: $palette) {
	@if type-of($global-palette) == 'map' {
		// @if $colors == 'all' and
		// $tones == 'all' {
		// 	$color-name: sp-random-of(map-keys($global-palette));
		// 	$tones: map-keys(map-get($global-palette, $color-name));
		// 	$tone: sp-random-of($tones);

		// 	@return sp-color($color-name, $tone);
		// }
		@if $colors == 'all' {
			@return sp-color-all($tones, $global-palette);
		}
		@if type-of($colors) == 'string' {
			// @if $tones == 'all'
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
		}
		@if type-of($colors) == 'list' {
			$color-name: sp-random-of($colors);
			@return $color-name;
			// @if $tones == 'all'
			// @if type-of($tones) == 'list'
			// @if type-of($tones) == 'map'
			// @if type-of($tones) == 'string'
		}
		@if type-of($colors) == 'map' and
		map-get($colors, 'exceptions') {
			@return sp-color-map($tones, $global-palette);
		}
	} @else {
		@return null;
	}
}
