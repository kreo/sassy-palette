///
/// Get random color
///
/// @param {Null|Map|List} $color [null] - color name
/// @param {Null|Map|List} $tone [null] - color tone
/// @param {Map} $global-palette [$global-palette] - color palette
///
/// @return {color}
///
/// @example
///   sp-random-color() // #ffcc80
///   sp-random-color() // #283593
///
/// @todo create separate `exceptions` function
///
/// @todo add `$color`/`$tone` options for `exceptions` function
///

@function sp-random-color($color: null, $tone: null, $global-palette: $palette) {
	@if type-of($global-palette) == 'map' {
		@if $color == null and
		$tone == null {
			$name: sp-random-of(map-keys($global-palette));
			$color-tones: map-keys(map-get($global-palette, $name));
			$tone: sp-random-of($color-tones);

			@return sp-color($name, $tone);
		}

		@if $color == 'all' {
			$name: sp-random-of(map-keys($global-palette));
			@return $name;
		}
		@if type-of($color) == 'list' {
			$name: sp-random-of($color);
			@return $name;
		}
		@if type-of($color) == 'map' and
		map-get($color, 'exceptions') {
			$exceptions: map-get($color, 'exceptions');
			$name: sp-random-of(map-keys($palette));
			@each $exception in $exceptions {
				@if $name == $exception {
					$name: sp-random-color($color, $tone, $global-palette);
				}
			}
			@return $name;
		}
	} @else {
		@return null;
	}
}

